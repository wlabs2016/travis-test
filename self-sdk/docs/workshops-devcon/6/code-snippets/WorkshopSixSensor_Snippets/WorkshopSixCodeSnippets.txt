//Code snippets for OnStart()
Log::Debug("WorkshopSixSensor", "Starting Camera!");
  m_StopThread = false;
  m_ThreadStopped = false;
#ifndef _WIN32
m_Capture.open(0);

if( !m_Capture.isOpened() )
{
    Log::Error("MacCamera", "Could not open Mac Camera - closing sensor");
    return false;
}
Log::Debug("WorkshopSixSensor", "Video Capture is now opened!");
#endif
ThreadPool::Instance()->InvokeOnThread<void *>(DELEGATE(WorkshopSixSensor, CaptureVideo, void *, this), 0);
return true;


//Code snippets for CaptureVideo()
#ifndef _WIN32
    while(!m_StopThread)
    {
        cv::Mat frame;
        m_Capture.read(frame);
        std::vector<unsigned char> outputVector;
        if ( cv::imencode(".jpg", frame, outputVector) && m_Paused <= 0 )
            ThreadPool::Instance()->InvokeOnMain<VideoData *>( DELEGATE( WorkshopSixSensor, SendingData, VideoData *, this ), new VideoData(outputVector));
        else
            Log::Error( "WorkshopSixSensor", "Failed to imencode()" );
        tthread::this_thread::sleep_for(tthread::chrono::milliseconds(1000 / m_fFramesPerSec));
    }
#endif
    m_ThreadStopped = true;

//Code snippets for SendingData()
    if (m_Paused <= 0)
        SendData(a_pData);
